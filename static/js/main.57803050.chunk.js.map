{"version":3,"sources":["components/Nav.js","components/Footer.js","components/Home.js","components/LogIn.js","components/QuestionsModal.js","components/Questions.js","components/pages/QuizEnter.js","components/pages/QuizResult.js","components/pages/QuizComplete.js","components/pages/Error.js","components/Quiz.js","App.js","reportWebVitals.js","ebconfig.js","index.js"],"names":["Nav","useEasybase","isUserSignedIn","signOut","history","useHistory","signOutUser","push","className","to","onClick","signOutBtn","Footer","heartIcon","icon","faHeart","githubIcon","faGithub","style","fontSize","marginTop","href","target","rel","containerVariants","visible","transition","staggerChildren","fadeIn","hidden","opacity","Home","div","variants","initial","animate","exit","h2","h4","button","type","whileHover","scale","LogIn","signIn","signUp","useState","username","setUsername","password","setPassword","validated","setValidated","formType","setType","onSignInClick","a","success","onSignUpClick","logged","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","setTimeout","window","location","reload","fontWeight","Group","controlId","Label","Control","required","placeholder","onChange","e","value","QuestionsModal","props","QuestionList","frame","map","QA","question","answer","faTrash","size","delQA","_key","Modal","aria-labelledby","centered","scrollable","Header","Title","id","Body","length","onHide","Questions","addQA","setQA","React","modalShow","setModalShow","handleChange","prevQA","show","aria-current","document","getElementById","xxl","Feedback","QuizEnter","getResult","currQuestion","addAnswer","containerVariantsChild","buttonVariants","lclAns","setLclAns","h6","reset","as","rows","prevAnswer","resize","input","QuizResult","QAcopy","setQuestionIndex","QuizComplete","emptyAnswer","width","Error","active","x","inactive","Quiz","setCurrQuestion","setAnswer","result","setResult","indexNum","SetBody","useEffect","App","useLocation","db","useReturn","return","mounted","all","qaData","insert","one","key","delete","where","exitBeforeEnter","exact","path","component","mainQA","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ebconfig","ReactDOM","render","StrictMode","basename"],"mappings":"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","file":"static/js/main.57803050.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useEasybase } from 'easybase-react';\r\nimport { useHistory , Link } from 'react-router-dom'\r\n\r\nconst Nav = () => {\r\n    /** User authentication - easybase */\r\n    const { isUserSignedIn, signOut } = useEasybase();\r\n    /** Used to redirect user to '/' */\r\n    const history = useHistory();\r\n\r\n    /** Displays sign out button */\r\n    const signOutBtn = () => {\r\n        if (isUserSignedIn()) {\r\n            return <button \r\n                    onClick={signOutUser} \r\n                    className=\"btn btn-outline-primary\"\r\n                    >\r\n                        Sign Out\r\n                    </button>\r\n        }\r\n    }\r\n\r\n    /** Sign out user */\r\n    const signOutUser = () => {\r\n        if (isUserSignedIn()) {\r\n          signOut();\r\n          history.push(\"/\");\r\n        } \r\n      }\r\n\r\n    return (\r\n        <nav \r\n        className=\"navbar navbar-light bg-light\"\r\n        >\r\n            <div \r\n            className=\"container\"\r\n            >\r\n                <span \r\n                className=\"navbar-brand mb-0 h1\"\r\n                >\r\n                    <Link to=\"/\" >StudyBuddy</Link>\r\n                </span>\r\n                { signOutBtn() }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst Footer = () => {\r\n    const heartIcon = <FontAwesomeIcon icon={faHeart} className=\"text-danger\"/>\r\n    const githubIcon = <FontAwesomeIcon icon={faGithub} className=\"text-secondary\" style={{fontSize:'20px'}}/>\r\n    const myFooter = { marginTop: 'auto' }\r\n\r\n    return (\r\n        <footer\r\n        className=\"bg-dark py-5 text-white\"\r\n        style={myFooter}\r\n        >\r\n            <div\r\n            className=\"container\"\r\n            >\r\n                <div\r\n                className=\"row\"\r\n                >\r\n                    <div\r\n                    className=\"col-8 text-secondary\"\r\n                    >\r\n                        Made with { heartIcon } by <a href=\"https://www.jonahlouis.ca/\" target=\"_blank\" rel=\"noreferrer\">Jonah Louis</a> \r\n                    </div>\r\n                    <div\r\n                    className=\"col-4 text-right\"\r\n                    >\r\n                        {/*  */}\r\n                        <a href=\"https://github.com/jonahlouis4/StudyBuddy\" target=\"_blank\" rel=\"noreferrer\">\r\n                            { githubIcon }\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport Nav from './Nav'\r\nimport Footer from './Footer'\r\nimport { Link } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\n\r\n/** Variant for main container */\r\nconst containerVariants = {\r\n    visible: { \r\n        transition: { \r\n            staggerChildren: 0.1 \r\n        } \r\n    },\r\n  };\r\n\r\n/** Fade in variant */\r\nconst fadeIn = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 }\r\n}\r\n\r\n/** Home page of Study Buddy */\r\nconst Home = () => {\r\n    return (\r\n        <motion.div \r\n        className=\"main--wrapper bg--container--1\"\r\n        variants={containerVariants} \r\n        initial=\"hidden\" \r\n        animate=\"visible\"\r\n        exit=\"exit\">\r\n            <Nav />\r\n            <div\r\n            className=\"container home--container-1 pt-5\"\r\n            >\r\n                <motion.h2\r\n                className=\"text-primary text-center\"\r\n                variants={fadeIn}\r\n                >\r\n                    Time to study!\r\n                </motion.h2>\r\n                <motion.h4 \r\n                className=\"text-center\"\r\n                variants={fadeIn}\r\n                >\r\n                    Select one of the following options\r\n                </motion.h4>\r\n                <motion.div \r\n                className=\"pt-5\"\r\n                variants={fadeIn}\r\n                >\r\n                    <div \r\n                    className=\"d-grid text-center\"\r\n                    >\r\n                        <motion.div\r\n                        variants={fadeIn}\r\n                        >\r\n                            <Link to=\"/questions\" className=\"home--links\">\r\n                                <motion.button \r\n                                className=\"btn btn-lg btn-primary col-12 col-md-8 col-lg-6\" \r\n                                type=\"button\"\r\n                                whileHover={{ scale: 1.1 }}\r\n                                >\r\n                                    Add Questions\r\n                                </motion.button>\r\n                            </Link>\r\n                        </motion.div>\r\n                        <motion.div\r\n                        variants={fadeIn}\r\n                        className=\"mt-5\"\r\n                        >\r\n                            <Link to=\"/quiz\" className=\"home--links\">\r\n                                <motion.button \r\n                                className=\"btn btn-lg btn-primary col-12 col-md-8 col-lg-6\" \r\n                                type=\"button\"\r\n                                whileHover={{ scale: 1.1 }}\r\n                                >\r\n                                    Start Quiz\r\n                                </motion.button>\r\n                            </Link>\r\n                        </motion.div>\r\n                    </div>\r\n                </motion.div>\r\n            </div>\r\n            <Footer />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState } from 'react'\r\nimport Nav from './Nav'\r\nimport Footer from './Footer'\r\nimport { useEasybase } from 'easybase-react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst LogIn = () => {\r\n    /** User authentication */\r\n    const { signIn, signUp } = useEasybase();\r\n    /** Username */\r\n    const [username, setUsername] = useState(\"\");\r\n    /** Password */\r\n    const [password, setPassword] = useState(\"\");\r\n    /** Validates form */\r\n    const [validated, setValidated] = useState(false);\r\n    /** True = signin, false = signup */\r\n    const [formType, setType] = useState(true);\r\n\r\n    /** Handle submission of form */\r\n    const handleSubmit = (event) => {\r\n      const form = event.currentTarget;\r\n\r\n      event.preventDefault();\r\n\r\n      if (form.checkValidity() === false) {\r\n        event.stopPropagation();\r\n      } else {\r\n        const signIn = formType;\r\n\r\n        if (signIn === true) {\r\n            onSignInClick();\r\n        } else {\r\n            onSignUpClick();\r\n\r\n            // Timeout required user to be redirected to home\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n                }, 1000);\r\n        }\r\n      }\r\n  \r\n      setValidated(true);\r\n    };\r\n\r\n    const onSignInClick = async () => {\r\n        const res = await signIn(username, password);\r\n        if (res.success) {\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        }\r\n    }\r\n\r\n    const onSignUpClick = async () => {\r\n        const res = await signUp(username, password);\r\n        if (res.success) {\r\n        await signIn(username, password);\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        }\r\n    }\r\n\r\n    const myFormType = () => {\r\n        const signIn = formType;\r\n        if (signIn === true) {\r\n            return  <>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Sign In</button>\r\n                        <button className=\"ml-1 btn btn-link\" onClick={() => setType(false)}>Or create an account</button>\r\n                    </>\r\n        } else {\r\n            return <>\r\n                        <button className=\"btn btn-danger\" type=\"submit\">Sign Up</button>\r\n                        <button className=\"ml-1 btn btn-link\" onClick={() => setType(true)}>Or return to sign in</button>\r\n                    </>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n        className=\"bg--container--1 main--wrapper\"\r\n        >\r\n            <Nav logged={false} />\r\n            <div\r\n            className=\"login--wrapper container\"\r\n            >\r\n                <div\r\n                className=\"text-center\"\r\n                >\r\n                    <h1\r\n                    className=\"mt-5\"\r\n                    >\r\n                        Welcome to StudyBuddy!\r\n                    </h1>\r\n                    <h4\r\n                    className=\"text-primary\"\r\n                    >\r\n                        Sign in or create your account by filling up the form.\r\n                    </h4>\r\n                </div>\r\n                <div\r\n                className=\"mt-5 py-5 px-4 px-sm-5 shadow-lg bg-white\"\r\n                >\r\n                    <Form\r\n                    noValidate\r\n                    validated={validated}\r\n                    onSubmit={handleSubmit}\r\n                    >\r\n                        <div\r\n                        className=\"mb-3\"\r\n                        style={{fontWeight:600}}\r\n                        >\r\n                            Test username: <span style={{fontWeight:400}}>studybuddytest</span>\r\n                            <br />\r\n                            Test password: <span style={{fontWeight:400}}>studybuddytest</span>\r\n                        </div>\r\n                        <Form.Group\r\n                        controlId=\"username\"\r\n                        >\r\n                            <Form.Label>Username or Email</Form.Label>\r\n                            <Form.Control \r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your username or email\"\r\n                            onChange={e => setUsername(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group\r\n                        controlId=\"password\"\r\n                        >\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control \r\n                            required\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            onChange={e => setPassword(e.target.value)} \r\n                            />\r\n                        </Form.Group>\r\n                        { myFormType() }\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n","import React from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\n  /**\r\n   * Modal for viewing and deleting questions + answers that exists\r\n   * @param {prop} props - props passed from Question.js\r\n   */\r\nconst QuestionsModal = (props) => {\r\n    /** Stores all the questions current active in list */\r\n    const QuestionList = props.frame.map(QA => { return ( \r\n        <div \r\n        className=\"myQuestions\" \r\n        key={QA._key}\r\n        >\r\n            <div\r\n            className=\"row border-bottom border-secondary py-4\"\r\n            >\r\n                <div\r\n                className=\"col-10 \"\r\n                >\r\n                    Q: {QA.question} \r\n                    <br />\r\n                    A: {QA.answer}\r\n                </div>\r\n                <div\r\n                className=\"col-2\"\r\n                >\r\n                    <button \r\n                    className=\"bg-white\"\r\n                    >\r\n                        <FontAwesomeIcon \r\n                        icon={faTrash} \r\n                        size=\"sm\" \r\n                        onClick={() => {props.delQA(QA._key)}}\r\n                        className=\"text-danger\"\r\n                        />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )})\r\n\r\n    /** Returns list if questions exists or a message if it's empty */\r\n    const verifyEmpty = () => {\r\n        if (props.frame.length === 0) { \r\n            return \"No questions exists.\"\r\n        } \r\n        else { \r\n            return QuestionList \r\n        }   \r\n    }\r\n    \r\n    return (\r\n        <Modal \r\n        {...props} \r\n        size=\"lg\" \r\n        aria-labelledby=\"contained-modal-title-vcenter\" \r\n        centered \r\n        scrollable=\"true\"\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title \r\n                id=\"contained-modal-title-vcenter\"\r\n                >\r\n                    My Questions\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body \r\n            className=\"modal-body\"\r\n            >\r\n                <> \r\n                { verifyEmpty() } \r\n                </>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button \r\n                onClick={props.onHide} \r\n                className=\"btn btn-primary\"\r\n                >\r\n                    Close\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>  \r\n    )\r\n}\r\n\r\nexport default QuestionsModal\r\n","import React, { useState } from 'react'\r\nimport Nav from './Nav'\r\nimport Footer from './Footer'\r\nimport QuestionsModal from './QuestionsModal'\r\nimport { Link } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\nimport { Form } from 'react-bootstrap'\r\n\r\n/** Variant for main container */\r\nconst containerVariants = {\r\n    visible: { \r\n        transition: { \r\n            staggerChildren: 0.1 \r\n        } \r\n    },\r\n};\r\n/** Fade in variant */\r\nconst fadeIn = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 }\r\n}\r\n\r\n/**\r\n * Operates the addition of questions + answers and the ability\r\n * to view and remote them.\r\n * @param {function} addQA - Reference to function that adds a question + answer\r\n * @param {function} delQA - Reference to function that removes a question + answer\r\n * @param {function} mainQA - Reference to the QA state from App.js \r\n */\r\nconst Questions = ({addQA, delQA, frame}) => { \r\n    /** Local useStates for questions and answers */\r\n    const [QA, setQA] = useState({question:\"\", answer:\"\"})\r\n    /** Sets value to show or hide modal */\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    /** State of form - valid or invalid */\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    /**\r\n     * Handles Submit button\r\n     * @param {event} e - event that user triggerred \r\n     */\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else {\r\n            // Can now copy paste instead of typing evertime \r\n            addQA(document.getElementById('question').value, document.getElementById('answer').value);  \r\n            setQA({question: \"\", answer: \"\"}) \r\n\r\n            // Timeout required for question to be added to serverless database\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n              }, 1000);\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    /**\r\n     * Handles every user change\r\n     * @param {event} e - event that user triggerred\r\n     */\r\n    const handleChange = (e) => { \r\n        // Add every input value to local useState QA\r\n        setQA((prevQA) => ({...prevQA, [e.target.id]: e.target.value})) \r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n        className=\"main--wrapper bg--container--1\"\r\n        variants={containerVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n        >\r\n            <Nav />\r\n            <QuestionsModal \r\n            show={modalShow} \r\n            onHide={() => setModalShow(false)} \r\n            frame={frame}\r\n            delQA={delQA}\r\n            />\r\n            <div\r\n            className=\"container questions--container-1\"\r\n            >\r\n                <motion.div \r\n                variants={fadeIn}\r\n                >\r\n                    <div\r\n                    className=\"row mt-3\"\r\n                    >\r\n                        <div\r\n                        className=\"col-6 text-left\"\r\n                        >\r\n                            <ol \r\n                            className=\"breadcrumb pl-0\"\r\n                            >\r\n                                <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                                <li className=\"breadcrumb-item active\" aria-current=\"page\">Questions</li>\r\n                            </ol>\r\n                        </div>\r\n                        <div\r\n                        className=\"col-6 text-right\"\r\n                        >\r\n                            <motion.button \r\n                            onClick={() => setModalShow(true)} \r\n                            className=\"btn btn-primary\"\r\n                            >\r\n                                View questions\r\n                            </motion.button>\r\n                        </div>\r\n                    </div>\r\n                </motion.div>\r\n                <motion.div\r\n                variants={fadeIn}\r\n                >\r\n                <Form\r\n                className=\"mt-5\"\r\n                noValidate\r\n                validated={validated}\r\n                onSubmit={handleSubmit}\r\n                >\r\n                    <Form.Group\r\n                    controlId=\"question\"\r\n                    xxl=\"12\"\r\n                    >\r\n                        <Form.Label>Enter a question</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Type your question\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please enter a question.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>     \r\n                    <Form.Group\r\n                    controlId=\"answer\"\r\n                    xxl=\"12\"\r\n                    >\r\n                        <Form.Label>Enter the answer</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type=\"text\"\r\n                            placeholder=\"Type your answer\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please enter an answer.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <button \r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    >\r\n                        Add\r\n                    </button>\r\n                </Form>\r\n                </motion.div>\r\n            </div>\r\n            <Footer />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Questions","import React, { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst QuizEnter = ({ getResult, currQuestion, addAnswer, containerVariantsChild, fadeIn, buttonVariants, frame}) => {\r\n    /** Stores local answer input */\r\n    const [lclAns, setLclAns] = useState({answer: \"\"});\r\n\r\n    /**\r\n     * Handles every user change\r\n     * @param {event} e - event that user triggerred\r\n     */\r\n    const handleChange = (e) => { \r\n        setLclAns((prevAnswer) => ({...prevAnswer, [e.target.id]: e.target.value})) \r\n    }\r\n\r\n    /**\r\n     * Handles Submit button\r\n     * @param {event} e - event that user triggerred \r\n     */\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        e.target.reset();\r\n        // Send info to parent (Quiz.js)...\r\n        addAnswer(lclAns);\r\n        getResult(1);        \r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n        variants={containerVariantsChild} \r\n        initial=\"hidden\" \r\n        animate=\"visible\" \r\n        exit=\"exit\"\r\n        >\r\n            {/* QUESTION */}\r\n            <div \r\n            className=\"quiz--container-1\">\r\n                <motion.h6 \r\n                variants={fadeIn}\r\n                style={{fontWeight:400}}\r\n                className=\"text-primary\"\r\n                >\r\n                    {currQuestion+1}/{frame.length}\r\n                </motion.h6>\r\n                <motion.h6 \r\n                variants={fadeIn} \r\n                className=\"my-0 py-0\"\r\n                style={{fontWeight:500}}\r\n                >\r\n                    {frame[currQuestion].question}\r\n                </motion.h6>\r\n            </div>\r\n                {/* ENTER ANSWER */}\r\n            <motion.div\r\n            className=\"quizenter--container-2 pt-5\"\r\n            variants={fadeIn} \r\n            >\r\n                <Form\r\n                onSubmit={handleSubmit}\r\n                >\r\n                  <Form.Group>\r\n                    <Form.Label>\r\n                            Enter the answer\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                            as=\"textarea\" \r\n                            rows={3} \r\n                            onChange={handleChange}\r\n                            id=\"answer\"\r\n                            style={{resize:'none'}}\r\n                            />\r\n                        <motion.div \r\n                        className=\"pt-3\"\r\n                        variants={fadeIn} \r\n                        >\r\n                            <motion.input\r\n                            variants={buttonVariants} \r\n                            animate ={lclAns.answer ? \"active\" : \"inactive\" }\r\n                            type=\"submit\" \r\n                            value=\"Submit\" \r\n                            className=\"btn btn-primary\"\r\n                            />\r\n                        </motion.div>\r\n                  </Form.Group>\r\n                </Form>\r\n            </motion.div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default QuizEnter\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst QuizResult = ({QAcopy, answer, getResult, currQuestion, setQuestionIndex, containerVariantsChild, fadeIn, buttonVariants, frame}) => {\r\n    \r\n    /** Handle event for next button */\r\n    const handleNext = () => {\r\n        // Increment index \r\n        setQuestionIndex(currQuestion + 1);\r\n\r\n        // IF went through all the questions \r\n        if (currQuestion >= frame.length-1) {  getResult(2); return;  }\r\n\r\n        // IF NOT Send 0 as result instead of 2\r\n        getResult(0);  \r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n        className=\"\" \r\n        variants={containerVariantsChild} \r\n        initial=\"hidden\" \r\n        animate=\"visible\" \r\n        exit=\"exit\"\r\n        >\r\n            {/* QUESTION */}\r\n            <div \r\n            className=\"quiz--container-1\"\r\n            >\r\n                <motion.h6 variants={fadeIn} style={{fontWeight:400}} className=\"text-primary\">\r\n                    {currQuestion+1}/{frame.length}\r\n                </motion.h6>\r\n                <motion.h6 variants={fadeIn} style={{fontWeight:500}} className=\"mt-0 pt-0\">\r\n                    {frame[currQuestion].question}\r\n                </motion.h6>\r\n            </div>\r\n                {/* ANSWERS */}\r\n            <div \r\n            className=\"mt-5 quizresult--container-1\"\r\n            >\r\n                {/* The answer */}\r\n                <motion.h6 variants={fadeIn} style={{fontWeight:600}} >\r\n                    The answer\r\n                </motion.h6>\r\n                <motion.h6 variants={fadeIn} style={{fontWeight:400}} >\r\n                    { frame[currQuestion].answer }\r\n                </motion.h6>\r\n                {/* 'Your' answer */}\r\n                <motion.h6 variants={fadeIn} className=\"mt-5\" style={{fontWeight:600}}>\r\n                    Your answer\r\n                </motion.h6>\r\n                <motion.h6 variants={fadeIn} style={{fontWeight:400}}>\r\n                    { answer.answer }\r\n                </motion.h6>\r\n                {/* Next */}\r\n                <motion.div variants={fadeIn}>\r\n                    <motion.button \r\n                    variants={buttonVariants} \r\n                    className=\"btn btn-primary mt-3\" \r\n                    onClick={handleNext}\r\n                    >\r\n                        next\r\n                    </motion.button>\r\n                </motion.div>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default QuizResult\r\n","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\n\r\n/**\r\n * Allows the user to exit (return home) or restart the quiz\r\n * @param {variants} containerVariantsChild - container variant for component\r\n * @param {variants} fadeIn - fade in for elements\r\n */\r\nconst QuizComplete = ({ addAnswer, setQuestionIndex, getResult, containerVariantsChild, fadeIn }) => {\r\n    /** Stores empty answer input */\r\n    const [emptyAnswer] = useState({answer: \"\"});\r\n    /** Used to redirect user to '/' */\r\n    const history = useHistory();\r\n    \r\n    /** Resets all data to restart the quiz */\r\n    const restart = () => {\r\n        // Reset & send info to parent (Quiz.js)...\r\n        addAnswer(emptyAnswer);\r\n        setQuestionIndex(0);\r\n        getResult(0);\r\n    }\r\n\r\n    /** Redirect the user to the homepage */\r\n    const exit = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n        className=\"quizcomplete--wrapper\"\r\n        variants={containerVariantsChild}\r\n        initial=\"hidden\" \r\n        animate=\"visible\" \r\n        exit=\"exit\"\r\n        >\r\n            <div \r\n            className=\"mt-5 text-center\"\r\n            >\r\n                <motion.h2 variants={fadeIn} className=\"text-primary\">Quiz Complete!</motion.h2>\r\n                <motion.h4 variants={fadeIn}>Select one of the following options</motion.h4>\r\n            </div>\r\n            <motion.div \r\n            className=\"btn-group justify-content-center mt-4\" \r\n            variants={fadeIn}\r\n            style={{width: '100%'}}\r\n            >\r\n                <div\r\n                className=\"btn-group\"\r\n                >\r\n                    <button onClick={restart} className=\"btn btn-lg btn-primary\">Restart</button>\r\n                    <button onClick={exit} className=\"btn btn-lg btn-danger\">Leave</button>\r\n                </div>\r\n            </motion.div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default QuizComplete\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Error = ({containerVariantsChild, fadeIn, buttonVariants}) => {\r\n    return (\r\n        <motion.div\r\n        variants={containerVariantsChild}\r\n        initial=\"hidden\" \r\n        animate=\"visible\" \r\n        exit=\"exit\"\r\n        className=\"error--wrapper mt-5 text-center\"\r\n        >\r\n            <motion.h2 \r\n            className=\"text-primary\"\r\n            variants={fadeIn}\r\n            >\r\n                Ooops! You forgot to add questions.\r\n            </motion.h2> \r\n            <motion.h4\r\n            variants={fadeIn}\r\n            >\r\n                Please make sure to add at least one question before starting a quiz.\r\n            </motion.h4>\r\n            <motion.div\r\n            variants={fadeIn}\r\n            >\r\n                <motion.button \r\n                className=\"btn btn-lg btn-primary mt-4\"\r\n                variants={buttonVariants} \r\n                >\r\n                    <Link to=\"/questions\" className=\"error--btn--link\">Add Questions</Link>\r\n                </motion.button>\r\n            </motion.div>\r\n           \r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState, useEffect } from 'react'\r\nimport Nav from './Nav'\r\nimport Footer from './Footer'\r\nimport QuizEnter from './pages/QuizEnter'\r\nimport QuizResult from './pages/QuizResult'\r\nimport QuizComplete from './pages/QuizComplete'\r\nimport Error from './pages/Error'\r\nimport { Link } from 'react-router-dom'\r\nimport { motion } from 'framer-motion'\r\n\r\n/** Variant for main container */\r\nconst containerVariants = {\r\n    visible: { \r\n        transition: { \r\n            staggerChildren: 0.1 \r\n        } \r\n    },\r\n};\r\n/** Variant for child component containers */\r\nconst containerVariantsChild = {\r\n    hidden: { opacity: 0,},\r\n    visible: { opacity: 1, \r\n        transition: { staggerChildren: 0.1 } },\r\n    exit: { opacity: 0 }\r\n};\r\n/** Fade in variant */\r\nconst fadeIn = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 }\r\n}\r\n/** Vairants for buttons */\r\nconst buttonVariants = {\r\n    active: { opacity: 1, x: 0 },\r\n    inactive: { opacity: 0, x: -10  },\r\n}\r\n\r\n/**\r\n * Start of the quiz implementation. Parent of the pages QuizEnter,\r\n * QuizResult, and QuizComplete.\r\n * @param {QA} mainQA - reference to the QA state from App.js \r\n */\r\nconst Quiz = ({frame}) => {\r\n    /** Index of current question */\r\n    const [currQuestion, setCurrQuestion] = useState(0);\r\n    /** Stores every answer input */\r\n    const [answer, setAnswer] = useState({answer: \"\"});\r\n    /** Determines the render of the body */\r\n    const [result, setResult] = useState(-1);\r\n\r\n    /**\r\n     * Sets the answer state\r\n     * @param {string} answer - answer entered from QuizEnter \r\n     */\r\n    const addAnswer = (answer) => { setAnswer(answer); }\r\n\r\n    /**\r\n     * Sets the incremented index of the current question\r\n     * @param {number} indexNum - new index number of currQuestion state\r\n     */\r\n    const setQuestionIndex = (indexNum) => { setCurrQuestion(indexNum); }\r\n\r\n    /**\r\n     * Sets the state of the result (0 = enter, 1 = result, 2 = complete, -1 empty state)\r\n     * @param {boolean} result - result controlled by child components\r\n     */\r\n    const getResult = (result) => { setResult(result) }\r\n\r\n    useEffect(() => {\r\n        // No questions in database\r\n        if (frame.length === 0) { \r\n        setResult(-1); \r\n        }\r\n        // Shuffle questions \r\n        else if (currQuestion === 0 && answer.answer === \"\") { \r\n            setResult(0); \r\n        }\r\n    }, [frame.length, currQuestion, answer.answer])\r\n\r\n    /**\r\n     * Returns the correct functional component\r\n     * @param {boolean} result - current state of result\r\n     */\r\n    function SetBody(props) {\r\n        // Determine render result \r\n        if (props.result === -1) {\r\n            return <Error containerVariantsChild={containerVariantsChild} \r\n                        fadeIn={fadeIn} buttonVariants={buttonVariants} />\r\n        } \r\n        else if (props.result === 0) {\r\n            return <QuizEnter getResult={getResult} currQuestion={currQuestion} \r\n                        addAnswer={addAnswer} containerVariantsChild={containerVariantsChild} \r\n                        fadeIn={fadeIn} buttonVariants={buttonVariants} frame={frame}/>\r\n        } \r\n        else if (props.result === 1) {\r\n            return <QuizResult getResult={getResult} currQuestion={currQuestion} answer={answer} \r\n                        setQuestionIndex={setQuestionIndex} containerVariantsChild={containerVariantsChild} \r\n                        buttonVariants={buttonVariants} fadeIn={fadeIn} frame={frame}/>\r\n        } \r\n        else if (props.result === 2) {\r\n            return <QuizComplete containerVariantsChild={containerVariantsChild} fadeIn={fadeIn} addAnswer={addAnswer}\r\n                        setQuestionIndex={setQuestionIndex} getResult={getResult} frame={frame}/>\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div\r\n        className=\"main--wrapper bg--container--1\"\r\n        >\r\n            <Nav />\r\n            <motion.div \r\n            className=\"container\" \r\n            variants={containerVariants} \r\n            initial=\"hidden\" \r\n            animate=\"visible\" \r\n            exit=\"exit\"\r\n            >\r\n                <ol \r\n                className=\"breadcrumb pl-0 mt-3\"\r\n                >\r\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Quiz</li>\r\n                </ol>\r\n                <SetBody result={result} />\r\n            </motion.div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n","import React, { useState, useEffect } from 'react'\r\nimport Home from './components/Home'\r\nimport LogIn from './components/LogIn'\r\nimport Questions from './components/Questions'\r\nimport Quiz from './components/Quiz'\r\nimport { Route, Switch, useLocation } from 'react-router-dom'\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport { useEasybase } from 'easybase-react';\r\n\r\n/**\r\n * Main function component of Study Buddy\r\n */\r\nfunction App() {\r\n  /** Used to store the current location of the present page */\r\n  const location = useLocation();\r\n  /** State that holds all questions and answers */\r\n  const [QA, setQA] = useState([]);\r\n  /** Easybase db and useReturn to fetch data when changed */\r\n  const { db, useReturn } = useEasybase();\r\n  /** Frame created to fetch data when changed */\r\n  const { frame } = useReturn(() => db(\"QUIZ CONTENT\").return(), []);\r\n  /** User authentication */\r\n  const { isUserSignedIn } = useEasybase();\r\n\r\n  const SetHome = () => {\r\n    if (!isUserSignedIn()) {\r\n      return <LogIn />\r\n    } else {\r\n      return <Home />\r\n    }\r\n  }\r\n\r\n  /** Adds all questions from database to state */\r\n  const mounted = async() => {\r\n    const qaData = await db('QUIZ CONTENT').return().all();\r\n    setQA(qaData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    mounted();\r\n  }, [])\r\n\r\n  /**\r\n   * Adds a question + answer attached\r\n   * @param {string} question - question entered by user\r\n   * @param {string} answer - answer to question entered by user\r\n   */\r\n  const addQA = async(question, answer) => {\r\n    // Add question + answer to db table \"QUIZ CONTENT\"\r\n    await db('QUIZ CONTENT').insert({\r\n      question: question,\r\n      answer: answer\r\n    }).one();\r\n  }\r\n\r\n  /**\r\n   * Deletes a question + answer attached\r\n   * @param {number} id - id represents the question + answer that will be deleted\r\n   */\r\n  const delQA = async(key) => {\r\n    await db('QUIZ CONTENT', false).delete().where({ _key: key }).one();\r\n  }\r\n\r\n  return (\r\n      <AnimatePresence exitBeforeEnter>\r\n        <Switch location={location} key={location.key} >\r\n          <Route exact path=\"/\" component={SetHome} />\r\n          <Route path=\"/questions\">\r\n            <Questions addQA={addQA} delQA={delQA} mainQA={QA} frame={frame}/>\r\n          </Route>\r\n          <Route path=\"/quiz\"><Quiz mainQA={QA} frame={frame}/></Route>\r\n        </Switch>\r\n      </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/* eslint-disable */\r\n// WARNING: Do not edit this file\r\n\r\nconst ebconfig = {\r\n  \"integration\": \"project-StudyBuddy-W8F7UqYj6Vusfg6Nseq8QDyh2lr8LIRQ\",\r\n  \"version\": \"2020-11-20\"\r\n}\r\n\r\nexport default ebconfig;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.scss';\r\n// Easybase\r\nimport { EasybaseProvider } from 'easybase-react';\r\nimport ebconfig from './ebconfig';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <EasybaseProvider ebconfig={ebconfig}>\r\n      <Router basename=\"/sb/\">\r\n        <App />\r\n      </Router>\r\n    </EasybaseProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}